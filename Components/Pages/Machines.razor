@page "/machines"
@using Blazor_Machine_Manager.Data
@using Blazor_Machine_Manager.Models
@using Microsoft.EntityFrameworkCore
@using System.Diagnostics
@inject ApplicationDbContext DbContext

<h3>Machines</h3>

<button @onclick="LoadMachines" class="btn btn-primary">Refresh</button>

@if (machines == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Is Online</th>
                <th>Last Updated</th>
                <th>Special Ability Of The Machine</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var machine in machines)
            {
                <tr>
                    <td>@machine.Id</td>
                    <td>@machine.Name</td>
                    <td>@machine.IsOnline</td>
                    <td>@machine.LastUpdated</td>
                    <td>@machine.SpecialAbilityOfMachine</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Summary</h4>
        </div>
        <div class="card-body">
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Totalt Antal Maskiner</th>
                        <th>Antal Maskiner som är online</th>
                        <th>Antal Maskiner som har en special ability</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@totalMachines</td>
                        <td>@onlineMachines</td>
                        <td>@specialAbilityMachines</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

}

@code {
    // Table
    private List<Machine> machines;

    // Card
    private int totalMachines;
    private int onlineMachines;
    private int specialAbilityMachines;

    protected override async Task OnInitializedAsync()
    {
        // Table
        Debug.WriteLine("OnInitializedAsync called");
        await LoadMachines();

        // Card
        machines = await DbContext.Machines.ToListAsync();
        totalMachines = machines.Count;
        onlineMachines = machines.Count(m => m.IsOnline == true);
        specialAbilityMachines = machines.Count(m => !string.IsNullOrEmpty(m.SpecialAbilityOfMachine));
    }
    // Table
    private async Task LoadMachines()
    {
        try
        {
            Debug.WriteLine("LoadMachines method called");
            await InvokeAsync(async () =>
            {
                machines = await DbContext.Machines.ToListAsync();
                Debug.WriteLine($"Loaded {machines.Count} machines from the database");
                StateHasChanged();
            });
        }
        catch (Exception ex)
        {
            Debug.WriteLine($"Error loading machines: {ex.Message}");
        }
    }
}
